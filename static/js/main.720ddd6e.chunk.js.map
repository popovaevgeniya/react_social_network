{"version":3,"sources":["assets/images/user_icon.png","assets/images/loader.svg","components/Profile/Profile.module.css","assets/images/logo.png","components/NavBar/NavBar.module.css","serviceWorker.js","api/api.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","components/NavBar/NavBar.jsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","components/Dialogs/Dialogs.jsx","hoc/AuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Paginator/Paginator.tsx","components/Users/Users.tsx","components/common/Preloader/Preloader.jsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.tsx","App.js","index.js","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/common/FormsControls/FormControl.module.css","assets/images/avatar.png","components/Paginator/Paginator.module.css","components/Profile/Posts/Post/Post.module.css"],"names":["module","exports","__webpack_require__","p","content","nav","item","active","Boolean","window","location","hostname","match","ResultCodeEnum","ResultCodeForCaptchaEnum","instatce","axios","create","withCredentials","baseURL","headers","API-KEY","usersAPI","requestUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","res","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","initialState","posts","id","message","likesCount","profile","newPostText","setStatus","type","profileReducer","state","action","newPost","Object","objectSpread2","toConsumableArray","dialogs","name","messages","text","dialogsReducer","body","newMessageBody","users","totalUsersCount","isFetching","followingInProgress","actions","totalCount","count","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","apply","this","usersReducer","map","u","followed","filter","login","isAuth","payload","getAuthUserData","_ref","_callee","response","_response$data","_login","_context","Success","_x","authReducer","initialized","appReducer","rootReducers","combineReducers","profilePage","messagesPage","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","NavBar","react_default","createElement","className","s","react_router_dom","to","activeClassName","FormControl","_ref$meta","meta","touched","error","children","hasError","formControl","TextArea","props","input","restProps","objectWithoutProperties","FormsControls_FormControl","assign","Input","required","value","maxLengthCreator","maxLength","Dialog","path","dialog","Message","maxLength50","AddMessageReduxForm","reduxForm","onSubmit","handleSubmit","Field","component","placeholder","validate","Dialogs","dialogsElements","d","Dialogs_Dialog","key","messagesElements","m","Dialogs_Message","dialogItem","sendMessage","mapStateToPropsForRedirect","connect","sendMessageActionCreator","Component","RedirectComponent","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","react_router","React","Paginator","totalItemsCount","onPageChanged","_props$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","cn","pageNumber","defineProperty","selectedPageNumber","Users","components_Paginator_Paginator","area","src","photos","small","userPhoto","alt","photo","disabled","some","field","Preloader","preloader","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","pageTitle","Fragment","common_Preloader_Preloader","components_Users_Users","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","items","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onStatusChange","e","currentTarget","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","large","defaultPhoto","aboutMe","ProfileInfo_ProfileStatus","Post","avatar","likeCount","maxLength10","AddNewPostReduxForm","Posts","postsElements","Posts_Post_Post","addPost","PostsContainer","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","Posts_PostsContainer","ProfileContainer","params","authorizedUserId","history","getUserProfile","components_Profile_Profile","withRouter","Header","logo","logout","HeaderContainer","components_Header_Header","LoginReduxForm","formSummeryError","stopSubmit","_error","formData","App","initializeApp","Header_HeaderContainer","components_NavBar_NavBar","render","Profile_ProfileContainer","DialogsContainer","Users_UsersContainer","components_Login_Login","promise","Promise","all","ReactDOM","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","selectedPage","pageButton"],"mappings":"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","file":"static/js/main.720ddd6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user_icon.13ffaa1f.png\";","module.exports = __webpack_public_path__ + \"static/media/loader.9064981b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","module.exports = __webpack_public_path__ + \"static/media/logo.a11bfcff.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__1FWUI\",\"item\":\"NavBar_item__2RAQQ\",\"active\":\"NavBar_active__1HRI5\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\nimport {ProfileType, UserType} from \"../types/types\";\n\nconst instatce = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {'API-KEY': '3f26be3e-65ab-4630-9892-39fd2574b842'}\n});\n\ntype GetItemsType = {\n    items: Array<UserType>\n    itemCount: number\n    totalCount: number\n    error: string | null\n}\n\nexport const usersAPI = {\n    requestUsers (currentPage = 1, pageSize = 10) {\n        return instatce.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`,\n        ).then(res => res.data)\n    },\n    follow (userId: number) {\n        return  instatce.post<ResponseType>(`follow/${userId}`, {}).then(res => res.data)\n    },\n    unfollow (userId: number) {\n        return  instatce.delete(`follow/${userId}`).then(res => res.data) as Promise<ResponseType>\n    },\n    getProfile(userId: number) {\n        console.warn('Obsolete method. Please use profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instatce.get<ProfileType>(`profile/${userId}`).then(res => res.data);\n    },\n    getStatus(userId: number) {\n        return instatce.get<string>(`profile/status/${userId}`).then(res => res.data);\n    },\n    updateStatus(status: string) {\n        return instatce.put<ResponseType>(`profile/status`, {status}).then(res => res.data);\n    }\n}\n\nexport enum ResultCodeEnum {\n    Success = 0,\n    Error = 1\n}\n\nexport enum ResultCodeForCaptchaEnum {\n    captchaIsRequired = 10\n}\n\ntype MeResponseDataType = {\n    id: number\n    email: string\n    login: string\n}\n\ntype LoginResponseDataType = {\n    userId: number\n}\n\ntype ResponseType<D = {}, RC = ResultCodeEnum> = {\n    data: D\n    messages: Array<string>\n    resultCode: RC\n}\n\nexport const authAPI = {\n    me() {\n        return instatce.get<ResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data);\n    },\n    login(email: string, password: string, rememberMe = false) {\n        return instatce.post<ResponseType<LoginResponseDataType, ResultCodeEnum | ResultCodeForCaptchaEnum>>(`auth/login`, {email, password, rememberMe}).then(res => res.data);\n    },\n    logout() {\n        return instatce.delete(`auth/login`).then(res => res.data);\n    }\n}\n\n","import {profileAPI, usersAPI} from \"../api/api\";\nimport {PostType, ProfileType} from \"../types/types\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\n\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi! How are you?', likesCount: 2},\n        {id: 2, message: 'Yoyoyoyo', likesCount: 12},\n        {id: 3, message: 'It is my first post.', likesCount: 42}\n    ] as Array<PostType>,\n    profile: null as ProfileType | null,\n    status: '',\n    newPostText: ''\n}\n\nexport type InitialStateType = typeof initialState\n\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            }\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status\n            }\n        default:\n            return state;\n    }\n}\n\ntype AddPostActionCreatorType = {\n    type: typeof ADD_POST\n    newPostText: string\n}\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorType => ({ type: ADD_POST, newPostText })\n\ntype SetUserProfileType = {\n    type: typeof SET_USER_PROFILE\n    profile: ProfileType\n}\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({\n        type: SET_USER_PROFILE,\n        profile\n    })\n\n\ntype SetStatusType = {\n    type: typeof SET_STATUS\n    status: string\n}\nexport const setStatus = (status: string): SetStatusType => ({type: SET_STATUS, status})\n\n\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response));\n}\n\nexport const getStatus = (userId: number) => async (dispatch: any) => {\n    const response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response));\n}\n\nexport const updateStatus = (status: string) => async (dispatch: any) => {\n    const response = await profileAPI.updateStatus(status);\n    if (response.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\n\ntype DialogsType = {\n    id: number,\n    name: string\n}\n\ntype MessagesType = {\n    id: number,\n    text: string\n}\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Dima'},\n        {id: 2, name: 'Slava'},\n        {id: 3, name: 'Valera'},\n        {id: 4, name: 'Kolia'},\n        {id: 5, name: 'Sveta'}\n    ] as Array<DialogsType>,\n    messages: [\n        {id: 1, text: 'Hi'},\n        {id: 2, text: 'Hello'},\n        {id: 3, text: 'How are you?'},\n        {id: 4, text: 'Yo'},\n        {id: 5, text: 'Hey!'}\n    ] as Array<MessagesType>\n}\n\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: 6, text: body}]\n            }\n        default:\n            return state;\n    }\n}\n\ntype SendMessageActionCreatorType = {\n    type: typeof SEND_MESSAGE,\n    newMessageBody: string\n}\n\nexport const sendMessageActionCreator = (newMessageBody: string): SendMessageActionCreatorType => (\n    { type: SEND_MESSAGE, newMessageBody }\n)\n\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\nimport {UserType} from \"../types/types\";\nimport {Dispatch} from \"redux\";\nimport {AppSateType, BaseThunkType, InferActionsType} from \"./redux-store\";\n\nlet initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [] as Array<number>\n}\n\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'FOLLOW':\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case 'UNFOLLOW':\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case 'SET_USERS':\n            return {\n                ...state,\n                users: action.users\n            }\n        case 'SET_CURRENT_PAGE':\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case 'SET_USERS_TOTAL_COUNT':\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        case 'TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS':\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        default:\n            return state;\n    }\n}\n\nexport const actions = {\n    followSuccess: (userId: number) => ({type: 'FOLLOW', userId} as const),\n    unfollowSuccess: (userId: number) => ({type: 'UNFOLLOW', userId} as const),\n    setUsers: (users: Array<UserType>) => ({type: 'SET_USERS', users} as const),\n    setCurrentPage: (currentPage: number) => ({type: 'SET_CURRENT_PAGE', currentPage} as const),\n    setTotalUsersCount: (totalCount: number) => ({type: 'SET_USERS_TOTAL_COUNT', count: totalCount} as const),\n    setToggleFetching: (isFetching: boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching} as const),\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({type: 'TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId} as const)\n}\n\nexport const requestUsers = (page: number, pageSize: number): ThunkType => (\n    async (dispatch) => {\n        dispatch(actions.setToggleFetching(true));\n        dispatch(actions.setCurrentPage(page));\n\n        const data = await usersAPI.requestUsers(page, pageSize);\n        dispatch(actions.setToggleFetching(false));\n        dispatch(actions.setUsers(data.items));\n        dispatch(actions.setTotalUsersCount(data.totalCount));\n    })\n\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionsType>,\n                                  userId: number,\n                                  apiMethod: any,\n                                  actionCreator: (userId: number) => ActionsType) => {\n    dispatch(actions.toggleFollowingProgress(true, userId));\n    const response = await apiMethod(userId);\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(actions.toggleFollowingProgress(false, userId));\n}\n\n//thunk creator\nexport const follow = (userId: number): ThunkType => (\n    async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess)\n    }\n)\n\n//thunk creator\nexport const unfollow = (userId: number): ThunkType => (\n    async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess)\n    }\n)\n\nexport default usersReducer;\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsType<typeof actions>\ntype GetStateType = () => AppSateType\ntype ThunkType = BaseThunkType<ActionsType>","import {authAPI, ResultCodeEnum} from \"../api/api\";\nimport {FormAction, stopSubmit} from \"redux-form\";\nimport {BaseThunkType, InferActionsType} from \"./redux-store\";\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SN/auth/SET_USER_DATA':\n            return <InitialStateType>{\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const actions = {\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => (\n        {type: 'SN/auth/SET_USER_DATA', payload: {userId, email, login, isAuth}} as const\n    )\n}\n\n//thunk creators:\nexport const getAuthUserData = ():ThunkType => async (dispatch) => {\n    const response = await authAPI.me();\n\n    if (response.resultCode === ResultCodeEnum.Success) {\n        let {id, email, login} = response.data;\n        dispatch(actions.setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean): ThunkType => async (dispatch) => {\n    const response = await authAPI.login(email, password, rememberMe);\n\n    if (response.resultCode === ResultCodeEnum.Success)\n        dispatch(getAuthUserData());\n    else {\n        let messages = response.messages.length > 0 ? response.messages[0] : 'Something is wrong!';\n        dispatch(stopSubmit('login', {_error: messages}));\n    }\n}\n\nexport const logout = (): ThunkType => async (dispatch) => {\n    const response = await authAPI.logout();\n\n    if (response.resultCode === ResultCodeEnum.Success)\n        dispatch(actions.setAuthUserData(null, null, null, false));\n}\n\nexport default authReducer;\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsType<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import {getAuthUserData} from \"./auth-reducer\";\nimport {InferActionsType} from \"./redux-store\";\n\nlet initialState = {\n    initialized: false\n}\n\n\nconst actions = {\n    initializedSuccess: () => ({type: 'SOCIAL_NETWORK/APP/INITIALIZED_SUCCESS'} as const)\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsType<typeof actions>\n\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SOCIAL_NETWORK/APP/INITIALIZED_SUCCESS':\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n}\n\n//thunk-a\nexport const initializeApp = () => (dispatch: any) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise]).then(() => {\n            dispatch(actions.initializedSuccess());\n        });\n}\n\nexport default appReducer;","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\"\nimport profileReducer from \"./profile-reducer\"\nimport dialogsReducer from \"./dialogs-reducer\"\nimport usersReducer from \"./users-reducer\"\nimport authReducer from \"./auth-reducer\"\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\"\n\nlet rootReducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : never\nexport type InferActionsType<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropertiesType<T>>\n\ntype RootReducersType = typeof rootReducers;\nexport type AppSateType = ReturnType<RootReducersType>\n\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppSateType, unknown, A>\n\n// @ts-ignore\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\nlet store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport default store","import React from \"react\";\nimport s from './NavBar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst NavBar = () => {\n    return(\n        <nav className={s.nav}>\n            <ul>\n                <div className={s.item}>\n                    <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\n                </div>\n                <div className={`${s.item}`}>\n                    <NavLink to='/dialogs' activeClassName={s.active}>Massages</NavLink>\n                </div>\n                <div className={s.item}>\n                    <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\n                </div>\n                <div className={s.item}>\n                    News\n                </div>\n                <div className={s.item}>\n                    Music\n                </div>\n                <div className={s.item}>\n                    Settings\n                </div>\n            </ul>\n        </nav>\n    )\n}\n\nexport default NavBar;","import React, {FC, ReactNode} from \"react\";\nimport s from './FormControl.module.css';\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\n\ntype FormControlPropsType = {\n    meta: WrappedFieldMetaProps\n    children: ReactNode\n}\n\nconst FormControl: FC<FormControlPropsType> = ({ meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\n        <div>\n            {children}\n        </div>\n        {hasError && <span>{error}</span>}\n    </div>\n}\n\nexport const TextArea: FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props;\n   return <FormControl {...props}>\n       <textarea {...input} {...restProps}/>\n   </FormControl>\n}\n\nexport const Input: FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}\n\n//type StringKeys = Extract<keyof LoginFormValuesType, string>","type FieldValidatorType = (value: string) => string | undefined\n\nexport const required: FieldValidatorType = (value) => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\n    if (value && value.length > 30) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst Dialog = (props) => {\n    let path = '/dialogs/' + props.id\n    return(\n        <div className={s.dialog + '' + s.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nconst Message = (props) => (\n    <div className={s.message}>{props.text}</div>\n)\n\nconst Dialogs = (props) => {\n    let state = props.messagesPage;\n    let dialogsElements = state.dialogs.map((d) =>\n        <Dialog name={d.name} id={d.id} key={d.id}/>\n        );\n    let messagesElements = state.messages.map((m) =>\n        <Message text={m.text} key={m.id}/>\n        );\n\n    let addNewMessage = (value) => {\n        props.sendMessage(value.newMessageBody);\n    }\n    return(\n        <div className={s.dialogs}>\n            <div className={s.dialogItem}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nconst maxLength50 = maxLengthCreator(50);\nconst AddMessageForm = (props) => {\n    return <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={TextArea} name='newMessageBody' placeholder='Enter your message' validate={[required, maxLength50]}/>\n        </div>\n        <div>\n            <button>Send</button>\n        </div>\n    </form>\n}\n\nconst AddMessageReduxForm = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm);\n\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\n            return <Component {...this.props}/>\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}","import {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage,\n        isAuth: state.auth.isAuth\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageActionCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);","import React, {useState} from \"react\";\nimport styles from './Paginator.module.css'\nimport cn from 'classnames';\n\ntype PropsType = {\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    portionSize?: number\n}\n\nconst Paginator: React.FC<PropsType> = (props) => {\n    const {totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10} = props;\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages: Array<number> = [];\n    for(let i=1; i<=pagesCount; i++) {\n        pages.push(i)\n    }\n\n    const portionCount = Math.ceil(pagesCount / portionSize);\n    const [portionNumber, setPortionNumber] = useState(1);\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    const rightPortionPageNumber = portionNumber * portionSize;\n\n    return (\n        <div className={styles.paginator}>\n            {portionNumber > 1 &&\n                <button onClick={()=>setPortionNumber(portionNumber-1)}>PREV</button>}\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map((p)=>(\n                    <span\n                        className={cn(styles.pageNumber, {[styles.selectedPageNumber]: currentPage===p})}\n                        key={p}\n                        onClick={()=>onPageChanged(p)}\n                    >{p}</span>\n                ))\n            }\n            {portionCount > portionNumber &&\n                <button onClick={()=>setPortionNumber(portionNumber+1)}>NEXT</button>}\n        </div>\n    )\n}\n\nexport default Paginator;","import React, {FC} from \"react\";\nimport s from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/user_icon.png\";\nimport {NavLink} from \"react-router-dom\";\nimport Paginator from \"../Paginator/Paginator\";\nimport {UserType} from \"../../types/types\";\n\ntype UsersType = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    portionSize?: number\n    users: Array<UserType>\n    followingInProgress: Array<number>\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n}\n\nlet Users: FC<UsersType> = (props) => {\n    const {currentPage, onPageChanged, pageSize, totalUsersCount, users, followingInProgress, follow, unfollow} = props;\n\n    return (\n        <div>\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                       pageSize={pageSize} totalItemsCount={totalUsersCount}/>\n            {\n                users.map(u => <div key={u.id} className={s.item}>\n                    <span className={s.area}>\n                        <div>\n                            <NavLink to={'/profile/' + u.id}>\n                                <img src={u.photos.small != null ? u.photos.small : userPhoto} alt='user_photo'\n                                     className={s.photo}/>\n                            </NavLink>\n                        </div>\n                        <div> {u.followed\n                            ? <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {unfollow(u.id)}}>Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {follow(u.id)}}>Follow</button>\n                        } </div>\n                    </span>\n                    <span className={s.area + '' + s.field}>\n                        <span className={s.area}>\n                            <div>{u.name}</div>\n                            <div>{u.status}</div>\n                        </span>\n                    </span>\n                </div>)\n            }\n        </div>\n    )\n}\n\nexport default Users;","import preloader from \"../../../assets/images/loader.svg\";\nimport React from \"react\";\n\nlet Preloader = (props) => {\n    return <img src={preloader} alt='preloader'/>\n}\nexport default Preloader;","import {createSelector} from \"reselect\";\nimport {AppSateType} from \"./redux-store\";\n\nexport const getUsersSelector = (state: AppSateType) => {\n    return state.usersPage.users;\n}\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    //если не будет меняться в стэйте getUsers, то эта функция не будет перезапускаться\n    return users.filter(u => true);\n})\n\nexport const getPageSize = (state: AppSateType) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state: AppSateType) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state: AppSateType) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state: AppSateType) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state: AppSateType) => {\n    return state.usersPage.followingInProgress;\n}\n","import {connect} from \"react-redux\";\nimport {\n    unfollow, follow, requestUsers\n} from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers\n} from \"../../redux/users-selectors\";\nimport {UserType} from \"../../types/types\";\nimport {AppSateType} from \"../../redux/redux-store\";\n\ntype MapStateToPropsType = {\n    currentPage: number\n    pageSize: number\n    isFetching: boolean\n    users: Array<UserType>\n    followingInProgress: Array<number>\n    totalUsersCount: number\n}\n\ntype MapDispatchToPropsType = {\n    requestUsers: (currentPage: number, pageSize: number) => void\n    follow: (id: number) => void\n    unfollow: (id: number) => void\n}\n\ntype OwnPropsType = {\n    pageTitle: string\n}\n\ntype PropsType = MapStateToPropsType & MapDispatchToPropsType & OwnPropsType\n\nclass UsersContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        this.props.requestUsers(pageNumber, this.props.pageSize);\n    }\n    render() {\n        const {\n            totalUsersCount, pageSize, currentPage, users, follow, unfollow, followingInProgress, isFetching, pageTitle\n        } = this.props;\n\n        return <>\n            <h2>{pageTitle}</h2>\n            {isFetching ?\n                <Preloader />\n                : null}\n            <Users totalUsersCount={totalUsersCount}\n                   pageSize={pageSize}\n                   currentPage={currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={users}\n                   follow={follow}\n                   unfollow={unfollow}\n                   followingInProgress={followingInProgress}\n            />\n        </>\n    }\n}\n\n//selectors\nlet mapStateToProps = (state: AppSateType): MapStateToPropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose(\n    connect<MapStateToPropsType, MapDispatchToPropsType, OwnPropsType, AppSateType>(\n        mapStateToProps,\n        {follow, unfollow, requestUsers})\n)(UsersContainer);\n","import React, {ChangeEvent} from \"react\";\n\ntype PropsType = {\n    status: string\n    updateStatus: (status: string) => void\n}\ntype StateType = {\n    editMode: boolean\n    status: string\n}\n\nclass ProfileStatus extends React.Component<PropsType, StateType> {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n    activateEditMode = () => {\n       this.setState(\n           {editMode: true}\n           )\n    }\n    deactivateEditMode = () => {\n        this.setState(\n            {editMode: false}\n        );\n        this.props.updateStatus(this.state.status);\n    }\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n    componentDidUpdate(prevProps: PropsType, prevState: StateType) {\n        if(prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            })\n        }\n    }\n\n    render() {\n       return <div>\n           {!this.state.editMode &&\n               <div>\n                   <span onDoubleClick={this.activateEditMode}>{this.props.status || '-----'}</span>\n               </div>\n           }\n           {this.state.editMode &&\n               <div>\n                    <input  onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\n               </div>\n           }\n        </div>\n    }\n}\n\nexport default ProfileStatus;","import React from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport defaultPhoto from \"../../../assets/images/avatar.png\";\nimport ProfileStatus from \"./ProfileStatus\"\n\nconst ProfileInfo = (props) => {\n    if (!props.profile){\n        return <Preloader />\n    }\n    return(\n        <div>\n            <img src={!props.profile.photos.large ? defaultPhoto : props.profile.photos.large} alt='avatar'/>\n            <span>{props.profile.aboutMe}</span>\n            {/*<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>*/}\n            <ProfileStatus />\n        </div>\n    )\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport s from './Post.module.css';\nimport avatar from \"../../../../assets/images/avatar.png\";\n\nconst Post = (props) => {\n    return(\n        <div className={s.item}>\n            <img className={s.item} src={avatar} alt='avatar'/>\n            {props.message}\n            <div>\n                <span>Like {props.likeCount}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from \"react\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\n\nconst Posts = (props) => {\n    let postsElements = props.posts.map((p) =>\n        <Post message={p.message} likeCount={p.likesCount} key={p.id}/>\n        );\n\n    let onAddPost = (value) => {\n        props.addPost(value.newPostText);\n    }\n\n    return(\n        <div className='posts'>\n            My posts\n            <AddNewPostReduxForm onSubmit={onAddPost}/>\n            {postsElements}\n        </div>\n    )\n}\nconst maxLength10 = maxLengthCreator(10);\nconst AddNewPostForm = (props) => {\n    return  <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={TextArea} name='newPostText' placeholder='Write something'\n                   validate={[required, maxLength10]}/>\n        </div>\n        <div>\n            <button>\n                Add post\n            </button>\n        </div>\n    </form>\n}\n\nconst AddNewPostReduxForm = reduxForm({\n    form: 'profileAddNewPostForm'\n})(AddNewPostForm);\n\nexport default Posts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport Posts from \"./Posts\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nexport default PostsContainer;","import React from \"react\";\nimport s from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport PostsContainer from \"./Posts/PostsContainer\";\n\nconst Profile = (props) => {\n    return(\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <PostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n               this.props.history.push('/login');\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n)(ProfileContainer);","import React from \"react\";\nimport './Header.css';\nimport logo from \"../../assets/images/logo.png\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return(\n        <header className='header'>\n            <img src={logo} alt='logo'/>\n            <div className='loginBlock'>\n                {props.isAuth\n                    ? <div>{props.login} <button onClick={props.logout}>Logout</button> </div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport Header from \"./Header\";\nimport {logout} from \"../../redux/auth-reducer\";\nimport {connect} from \"react-redux\";\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props}/>\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React, {FC} from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router\";\nimport s from './../common/FormsControls/FormControl.module.css';\nimport {AppSateType} from \"../../redux/redux-store\";\n\nconst LoginForm: FC<InjectedFormProps<LoginFormValuesType>> = ({handleSubmit, error}) => {\n    return <form onSubmit={handleSubmit}>\n        <div>\n            <Field placeholder='E-mail' component={Input} type=\"email\" name='email' validate={[required]}/>\n        </div>\n        <div>\n            <Field placeholder='Password' component={Input} type=\"password\" name='password' validate={[required]}/>\n        </div>\n        <div>\n            <Field type=\"checkbox\" component={Input} name='rememberMe'/> Remember me\n        </div>\n        {error && <div className={s.formSummeryError}>\n            {error}\n        </div>}\n        <div>\n            <button>Login</button>\n        </div>\n    </form>\n};\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType>({ form: 'login' })(LoginForm);\n\ntype MapStateToPropsType = {\n    isAuth: boolean\n}\ntype MapDispatchToPropsType = {\n    login: (email: string, password: string, rememberMe: boolean) => void\n}\n\ntype LoginFormValuesType = {\n    rememberMe: boolean\n    password: string\n    email: string\n}\n\nconst Login: FC<MapStateToPropsType & MapDispatchToPropsType> = ({login, isAuth}) => {\n    const onSubmit = (formData: LoginFormValuesType) => {\n        login(formData.email, formData.password, formData.rememberMe);\n    };\n    if(isAuth) return <Redirect to='/profile'/>\n    return <div>\n        <h1>LOGIN</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n};\n\nconst mapStateToProps = (state: AppSateType): MapStateToPropsType => ({\n    isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login); //здесь login является thunk creator","import React from 'react';\nimport './App.css';\nimport NavBar from \"./components/NavBar/NavBar\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if(!this.props.initialized){\n            return <Preloader/>\n        }\n        return (\n            <BrowserRouter>\n                <div className=\"app-wrapper\">\n                    <HeaderContainer/>\n                    <NavBar/>\n                    <div className='app-wrapper-content'>\n                        {/*<Route path='/profile' component={Profile}/>*/}\n                        <Route\n                            path='/profile/:userId?'\n                            render={() =>\n                                <ProfileContainer/>\n                            }\n                        />\n                        <Route\n                            path='/dialogs'\n                            render={() =>\n                                <DialogsContainer/>\n                            }\n                        />\n                        <Route\n                            path='/users'\n                            render={() =>\n                                <UsersContainer pageTitle=\"Users page\"/>\n                            }\n                        />\n                        <Route\n                            path='/login'\n                            render={() =>\n                                <LoginPage/>\n                            }\n                        />\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    /*<React.StrictMode>*/\n        <Provider store={store}>\n            <App\n            />\n        </Provider>\n    /*</React.StrictMode>*/,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"messages\":\"Dialogs_messages__1w_Up\",\"active\":\"Dialogs_active__2sQhs\",\"dialogItem\":\"Dialogs_dialogItem__1AD6j\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__2hOPg\",\"area\":\"Users_area__3s_qe\",\"field\":\"Users_field__13ip4\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"pageButton\":\"Users_pageButton__1ZjBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__2tDgs\",\"error\":\"FormControl_error__2w4xO\",\"formSummeryError\":\"FormControl_formSummeryError__3KpqV\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.e2dc1ebf.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3w-2P\",\"pageNumber\":\"Paginator_pageNumber__1RptP\",\"selectedPageNumber\":\"Paginator_selectedPageNumber__2NFdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2EmvQ\"};"],"sourceRoot":""}