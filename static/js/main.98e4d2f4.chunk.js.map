{"version":3,"sources":["components/common/FormsControls/FormControl.module.css","components/common/Preloader/Preloader.tsx","components/common/FormsControls/FormsControls.tsx","utils/validators/validators.ts","redux/profile-reducer.ts","components/Avatar/Avatar.tsx","redux/dialogs-reducer.ts","assets/images/loader.svg","assets/images/logo.png","api/api.ts","serviceWorker.js","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","redux/users-selectors.ts","components/UsersSearchForm/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","redux/auth-selectors.ts","components/Login/Login.tsx","components/Header/Header.tsx","hoc/WithSuspense.tsx","App.tsx","index.tsx","components/Users/Users.module.css"],"names":["module","exports","formControl","error","formSummeryError","Preloader","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","src","preloader","alt","FormControl","_ref","_ref$meta","meta","touched","children","hasError","className","concat","s","TextArea","props","input","restProps","Object","_home_asus_projects_react_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","initialState","posts","id","message","likesCount","profile","status","addPostActionCreator","newPostText","type","setStatus","getUserProfile","userId","_home_asus_projects_react_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_asus_projects_react_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","response","wrap","_context","prev","next","usersAPI","getProfile","sent","stop","_x","apply","this","arguments","getStatus","_ref2","_callee2","_context2","profileAPI","_x2","updateStatus","_ref3","_callee3","_context3","resultCode","_x3","profileReducer","state","undefined","action","newPost","_home_asus_projects_react_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_3__","_home_asus_projects_react_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","UserAvatar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","antd__WEBPACK_IMPORTED_MODULE_2__","_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__","small","size","avatar","useSelector","_state$profilePage$pr","_state$profilePage$pr2","profilePage","photos","large","commonAvatarProperties","shape","icon","width","style","borderRadius","dialogs","name","messages","text","sendMessage","newMessageBody","dialogsReducer","body","_home_asus_projects_react_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__","_home_asus_projects_react_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","p","ResultCodeEnum","authAPI","ResultCodeForCaptchaEnum","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","create","withCredentials","baseURL","headers","API-KEY","requestUsers","currentPage","pageSize","term","friend","isFriend","get","then","res","data","follow","post","unfollow","delete","console","warn","put","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","users","totalUsersCount","isFetching","followingInProgress","filter","actions","totalCount","count","payload","page","asyncToGenerator","regenerator_default","items","followUnfollowFlow","apiMethod","actionCreator","_x4","_x5","usersReducer","objectSpread2","map","u","followed","toConsumableArray","isAuth","getAuthUserData","_response$data","_login","Success","authReducer","initialized","appReducer","rootReducers","combineReducers","messagesPage","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","UsersSearchForm","React","memo","onFilterChange","react_default","formik_esm","enableReinitialize","initialValues","String","validate","values","onSubmit","setSubmitting","setTimeout","isSubmitting","as","disabled","Users","useDispatch","history","useHistory","useEffect","searchParams","URLSearchParams","search","actualPage","actualFilter","has","Number","query","push","pathname","toString","UsersSearchForm_UsersSearchForm","key","item","area","react_router_dom","to","photo","UserOutlined","field","some","onClick","_ref4","_callee4","_context4","bind","_x7","_x6","pagination","defaultCurrent","current","total","defaultPageSize","onChange","pageNumber","showSizeChanger","UsersPage","pageTitle","Fragment","components_Users_Users","selectIsAuth","selectCurrentUserLogin","LoginReduxForm","reduxForm","handleSubmit","Field","placeholder","component","LoginPage","react_router","formData","stopSubmit","_error","HeaderApp","Text","Typography","Avatar","strong","es_button","withSuspense","WrappedComponent","Suspense","fallback","SubMenu","Menu","Header","Layout","Content","Footer","Sider","DialogsContainer","lazy","e","ProfileContainer","ChatPage","Promise","all","SuspendedDialogs","SuspendedProfile","SuspendedChat","connect","initializeApp","promise","layout","App_Header","logo","Header_Header","padding","breadcrumb","margin","background","menu","mode","height","title","Item","minHeight","path","render","UsersContainer","Login","textAlign","ReactDOM","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","selectedPage","pageButton"],"mappings":"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","file":"static/js/main.98e4d2f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__2tDgs\",\"error\":\"FormControl_error__2w4xO\",\"formSummeryError\":\"FormControl_formSummeryError__3KpqV\"};","import preloader from \"../../../assets/images/loader.svg\";\nimport React from \"react\";\n\nlet Preloader = () => {\n    return <img src={preloader} alt='preloader'/>\n}\nexport default Preloader;","import React, {FC, ReactNode} from \"react\";\nimport s from './FormControl.module.css';\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\n\ntype FormControlPropsType = {\n    meta: WrappedFieldMetaProps\n    children: ReactNode\n}\n\nconst FormControl: FC<FormControlPropsType> = ({ meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return <div className={`${s.formControl} ${hasError ? s.error : ''}`}>\n        <div>\n            {children}\n        </div>\n        {hasError && <span>{error}</span>}\n    </div>\n}\n\nexport const TextArea: FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props;\n   return <FormControl {...props}>\n       <textarea {...input} {...restProps}/>\n   </FormControl>\n}\n\nexport const Input: FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n}\n\n//type StringKeys = Extract<keyof LoginFormValuesType, string>","type FieldValidatorType = (value: string) => string | undefined\n\nexport const required: FieldValidatorType = (value) => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\n    if (value && value.length > 30) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","import {profileAPI, usersAPI} from \"../api/api\";\nimport {PostType, ProfileType} from \"../types/types\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\n\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi! How are you?', likesCount: 2},\n        {id: 2, message: 'Yoyoyoyo', likesCount: 12},\n        {id: 3, message: 'It is my first post.', likesCount: 42}\n    ] as Array<PostType>,\n    profile: null as ProfileType | null,\n    status: ''\n}\n\nexport type InitialStateType = typeof initialState\n\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost]\n            }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            }\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status\n            }\n        default:\n            return state;\n    }\n}\n\ntype AddPostActionCreatorType = {\n    type: typeof ADD_POST\n    newPostText: string\n}\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorType => ({ type: ADD_POST, newPostText })\n\ntype SetUserProfileType = {\n    type: typeof SET_USER_PROFILE\n    profile: ProfileType\n}\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({\n        type: SET_USER_PROFILE,\n        profile\n    })\n\n\ntype SetStatusType = {\n    type: typeof SET_STATUS\n    status: string\n}\nexport const setStatus = (status: string): SetStatusType => ({type: SET_STATUS, status})\n\n\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response));\n}\n\nexport const getStatus = (userId: number) => async (dispatch: any) => {\n    const response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response));\n}\n\nexport const updateStatus = (status: string) => async (dispatch: any) => {\n    const response = await profileAPI.updateStatus(status);\n    if (response.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\nexport default profileReducer;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {AppSateType} from '../../redux/redux-store';\nimport {Avatar, AvatarProps} from 'antd';\nimport {UserOutlined} from '@ant-design/icons';\n\ntype PropsType = {\n    small?: boolean\n    size?: number\n}\n\nexport const UserAvatar: React.FC<PropsType> = ({small, size}) => {\n    const avatar = useSelector((state: AppSateType) => small ? state.profilePage.profile?.photos.small : state.profilePage.profile?.photos.large)\n\n    if (!avatar) {\n        const commonAvatarProperties = {\n            shape: 'square',\n            icon: <UserOutlined/>\n        } as AvatarProps\n\n        return small\n            ? <Avatar {...commonAvatarProperties}/>\n            : <Avatar {...commonAvatarProperties} size={size || 170}/>\n    }\n\n    return <img src={avatar} alt=\"avatar\" width={size} style={{borderRadius: '6px'}}/>\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\n\nexport type DialogsType = {\n    id: number,\n    name: string\n}\n\nexport type MessagesType = {\n    id: number,\n    text: string\n}\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Dima'},\n        {id: 2, name: 'Slava'},\n        {id: 3, name: 'Valera'},\n        {id: 4, name: 'Kolia'},\n        {id: 5, name: 'Sveta'}\n    ] as Array<DialogsType>,\n    messages: [\n        {id: 1, text: 'Hi'},\n        {id: 2, text: 'Hello'},\n        {id: 3, text: 'How are you?'},\n        {id: 4, text: 'Yo'},\n        {id: 5, text: 'Hey!'}\n    ] as Array<MessagesType>\n}\n\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messages: [...state.messages, {id: 6, text: body}]\n            }\n        default:\n            return state;\n    }\n}\n\ntype SendMessageActionCreatorType = {\n    type: typeof SEND_MESSAGE,\n    newMessageBody: string\n}\n\nexport const sendMessage = (newMessageBody: string): SendMessageActionCreatorType => (\n    { type: SEND_MESSAGE, newMessageBody }\n)\n\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/loader.9064981b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.a11bfcff.png\";","import axios from 'axios';\nimport {ProfileType, UserType} from '../types/types';\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {'API-KEY': '3f26be3e-65ab-4630-9892-39fd2574b842'}\n});\n\ntype GetItemsType = {\n    items: Array<UserType>\n    itemCount: number\n    totalCount: number\n    error: string | null\n}\n\nexport const usersAPI = {\n    requestUsers(currentPage = 1, pageSize = 10, term: string = '', friend: null | boolean = null) {\n        const isFriend = friend ? `&friend=${friend}` : ''\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + isFriend\n        ).then(res => res.data)\n    },\n    follow(userId: number) {\n        return instance.post<ResponseType>(`follow/${userId}`, {}).then(res => res.data)\n    },\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<ResponseType>\n    },\n    getProfile(userId: number) {\n        console.warn('Obsolete method. Please use profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instance.get<ProfileType>(`profile/${userId}`).then(res => res.data);\n    },\n    getStatus(userId: number) {\n        return instance.get<string>(`profile/status/${userId}`).then(res => res.data);\n    },\n    updateStatus(status: string) {\n        return instance.put<ResponseType>(`profile/status`, {status}).then(res => res.data);\n    }\n}\n\nexport enum ResultCodeEnum {\n    Success = 0,\n    Error = 1\n}\n\nexport enum ResultCodeForCaptchaEnum {\n    captchaIsRequired = 10\n}\n\ntype MeResponseDataType = {\n    id: number\n    email: string\n    login: string\n}\n\ntype LoginResponseDataType = {\n    userId: number\n}\n\nexport type ResponseType<D = {}, RC = ResultCodeEnum> = {\n    data: D\n    messages: Array<string>\n    resultCode: RC\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get<ResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data);\n    },\n    login(email: string, password: string, rememberMe = false) {\n        return instance.post<ResponseType<LoginResponseDataType, ResultCodeEnum | ResultCodeForCaptchaEnum>>(`auth/login`, {\n            email,\n            password,\n            rememberMe\n        }).then(res => res.data);\n    },\n    logout() {\n        return instance.delete(`auth/login`).then(res => res.data);\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ResponseType, usersAPI} from '../api/api';\nimport {UserType} from '../types/types';\nimport {Dispatch} from 'redux';\nimport {BaseThunkType, InferActionsType} from './redux-store';\n\nlet initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 12,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [] as Array<number>,\n    filter: {\n        term: '',\n        friend: null as null | boolean\n    }\n}\n\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'FOLLOW':\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case 'UNFOLLOW':\n            return {\n                ...state,\n                users: state.users.map((u) => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case 'SET_USERS':\n            return {\n                ...state,\n                users: action.users\n            }\n        case 'SET_CURRENT_PAGE':\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case 'SET_USERS_TOTAL_COUNT':\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        case 'TOGGLE_IS_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS':\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        case 'SET_FILTER':\n            return {\n                ...state,\n                filter: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const actions = {\n    followSuccess: (userId: number) => ({type: 'FOLLOW', userId} as const),\n    unfollowSuccess: (userId: number) => ({type: 'UNFOLLOW', userId} as const),\n    setUsers: (users: Array<UserType>) => ({type: 'SET_USERS', users} as const),\n    setCurrentPage: (currentPage: number) => ({type: 'SET_CURRENT_PAGE', currentPage} as const),\n    setTotalUsersCount: (totalCount: number) => ({type: 'SET_USERS_TOTAL_COUNT', count: totalCount} as const),\n    setToggleFetching: (isFetching: boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching} as const),\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\n        type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\n        isFetching,\n        userId\n    } as const),\n    setFilter: (filter: FilterType) => ({type: 'SET_FILTER', payload: filter} as const)\n}\n\nexport const requestUsers = (page: number, pageSize: number, filter: FilterType): ThunkType => (\n    async (dispatch) => {\n        dispatch(actions.setToggleFetching(true));\n        dispatch(actions.setCurrentPage(page));\n\n        const data = await usersAPI.requestUsers(page, pageSize, filter.term, filter.friend);\n        dispatch(actions.setToggleFetching(false));\n        dispatch(actions.setUsers(data.items));\n        dispatch(actions.setTotalUsersCount(data.totalCount));\n        dispatch(actions.setFilter(filter))\n    })\n\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionsType>,\n                                  userId: number,\n                                  apiMethod: (userId: number) => Promise<ResponseType>,\n                                  actionCreator: (userId: number) => ActionsType) => {\n    dispatch(actions.toggleFollowingProgress(true, userId));\n    const response = await apiMethod(userId);\n    if (response.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(actions.toggleFollowingProgress(false, userId));\n}\n\n//thunk creator\nexport const follow = (userId: number): ThunkType => (\n    async (dispatch) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess)\n    }\n)\n\n//thunk creator\nexport const unfollow = (userId: number): ThunkType => (\n    async (dispatch) => {\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess)\n    }\n)\n\nexport default usersReducer;\n\nexport type InitialStateType = typeof initialState\nexport type FilterType = typeof initialState.filter\ntype ActionsType = InferActionsType<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>","import {authAPI, ResultCodeEnum} from \"../api/api\";\nimport {FormAction, stopSubmit} from \"redux-form\";\nimport {BaseThunkType, InferActionsType} from \"./redux-store\";\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SN/auth/SET_USER_DATA':\n            return {\n                ...state,\n                ...action.payload\n            } as InitialStateType\n        default:\n            return state;\n    }\n}\n\nexport const actions = {\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => (\n        {type: 'SN/auth/SET_USER_DATA', payload: {userId, email, login, isAuth}} as const\n    )\n}\n\n//thunk creators:\nexport const getAuthUserData = ():ThunkType => async (dispatch) => {\n    const response = await authAPI.me();\n\n    if (response.resultCode === ResultCodeEnum.Success) {\n        let {id, email, login} = response.data;\n        dispatch(actions.setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean): ThunkType => async (dispatch) => {\n    const response = await authAPI.login(email, password, rememberMe);\n\n    if (response.resultCode === ResultCodeEnum.Success)\n        dispatch(getAuthUserData());\n    else {\n        let messages = response.messages.length > 0 ? response.messages[0] : 'Something is wrong!';\n        dispatch(stopSubmit('login', {_error: messages}));\n    }\n}\n\nexport const logout = (): ThunkType => async (dispatch) => {\n    const response = await authAPI.logout();\n\n    if (response.resultCode === ResultCodeEnum.Success)\n        dispatch(actions.setAuthUserData(null, null, null, false));\n}\n\nexport default authReducer;\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsType<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType | FormAction>","import {getAuthUserData} from \"./auth-reducer\";\nimport {InferActionsType} from \"./redux-store\";\n\nlet initialState = {\n    initialized: false\n}\n\n\nconst actions = {\n    initializedSuccess: () => ({type: 'SOCIAL_NETWORK/APP/INITIALIZED_SUCCESS'} as const)\n}\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsType<typeof actions>\n\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SOCIAL_NETWORK/APP/INITIALIZED_SUCCESS':\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n}\n\n//thunk-a\nexport const initializeApp = () => (dispatch: any) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise]).then(() => {\n            dispatch(actions.initializedSuccess());\n        });\n}\n\nexport default appReducer;","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\"\nimport profileReducer from \"./profile-reducer\"\nimport dialogsReducer from \"./dialogs-reducer\"\nimport usersReducer from \"./users-reducer\"\nimport authReducer from \"./auth-reducer\"\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./app-reducer\"\n\nlet rootReducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\nexport type InferActionsType<T> = T extends {[keys: string]: (...args: any[]) => infer U } ? U : never\n\ntype RootReducersType = typeof rootReducers;\nexport type AppSateType = ReturnType<RootReducersType>\n\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppSateType, unknown, A>\n\n// @ts-ignore\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\nlet store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport default store","import {createSelector} from \"reselect\";\nimport {AppSateType} from \"./redux-store\";\n\nexport const getUsersSelector = (state: AppSateType) => {\n    return state.usersPage.users;\n}\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    //если не будет меняться в стэйте getUsers, то эта функция не будет перезапускаться\n    return users.filter(u => true);\n})\n\nexport const getPageSize = (state: AppSateType) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state: AppSateType) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state: AppSateType) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state: AppSateType) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state: AppSateType) => {\n    return state.usersPage.followingInProgress;\n}\n\nexport const getUsersFilter = (state: AppSateType) => (\n    state.usersPage.filter\n)\n","import {Field, Form, Formik} from 'formik';\nimport React from 'react';\nimport {FilterType} from '../../redux/users-reducer';\nimport {useSelector} from 'react-redux';\nimport {getUsersFilter} from '../../redux/users-selectors';\n\ntype PropsType = {\n    onFilterChange: (filter: FilterType) => void\n}\n\ntype FormType = {\n    term: string\n    friend: 'null' | 'true' | 'false'\n}\n\nconst UsersSearchForm: React.FC<PropsType> = React.memo(({onFilterChange}) => {\n    const filter = useSelector(getUsersFilter)\n    const usersSearchFormValidate = (values: any) => {\n        return {};\n    }\n\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        const filter: FilterType = {\n            term: values.term,\n            friend: values.friend === 'null' ? null : values.friend === 'true'\n        }\n        onFilterChange(filter)\n        setTimeout(() => {\n            setSubmitting(false)\n        }, 400);\n    }\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={{term: filter.term, friend: String(filter.friend)} as FormType}\n            validate={usersSearchFormValidate}\n            onSubmit={submit}\n        >\n            {({isSubmitting}) => (\n                <Form>\n                    <Field type=\"text\" name=\"term\"/>\n                    <Field name=\"friend\" as=\"select\">\n                        <option value=\"null\">All</option>\n                        <option value=\"true\">Only followed</option>\n                        <option value=\"false\">Only unfollowed</option>\n                    </Field>\n                    <button type=\"submit\" disabled={isSubmitting}>\n                        Find\n                    </button>\n                </Form>\n            )}\n        </Formik>\n    )\n})\n\nexport default UsersSearchForm","import React, {useEffect} from 'react';\nimport s from './Users.module.css';\nimport {NavLink, useHistory} from 'react-router-dom';\nimport UsersSearchForm from '../UsersSearchForm/UsersSearchForm';\nimport {FilterType, follow, requestUsers, unfollow} from '../../redux/users-reducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers,\n    getUsersFilter\n} from '../../redux/users-selectors';\nimport {Avatar, Pagination} from 'antd';\nimport {UserOutlined} from '@ant-design/icons';\n\ntype QueryParamsType = {\n    term?: string\n    friend?: string\n    page?: string\n}\n\nconst Users: React.FC = () => {\n    const users = useSelector(getUsers)\n    const totalUsersCount = useSelector(getTotalUsersCount)\n    const currentPage = useSelector(getCurrentPage)\n    const pageSize = useSelector(getPageSize)\n    const filter = useSelector(getUsersFilter)\n    const followingInProgress = useSelector(getFollowingInProgress)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n            const searchParams = new URLSearchParams(history.location.search)\n            let actualPage = currentPage\n            let actualFilter = filter\n\n            if (searchParams.has('page')) {\n                actualPage = Number(searchParams.get('page'))\n            }\n            if (searchParams.has('term')) {\n                actualFilter = {...actualFilter, term: searchParams.get('term') as string}\n            }\n            switch (searchParams.get('friend')) {\n                case 'null':\n                    actualFilter = {...actualFilter, friend: null}\n                    break\n                case 'true':\n                    actualFilter = {...actualFilter, friend: true}\n                    break\n                case 'false':\n                    actualFilter = {...actualFilter, friend: false}\n                    break\n            }\n\n            dispatch(requestUsers(actualPage, pageSize, actualFilter))\n        },\n        [])\n\n    useEffect(() => {\n        const query: QueryParamsType = {}\n        if (!!filter.term) query.term = filter.term\n        if (filter.friend !== null) query.friend = String(filter.friend)\n        if (currentPage !== 1) query.page = String(currentPage)\n\n        history.push({\n            pathname: '/users',\n            search: new URLSearchParams(query).toString()\n        })\n    }, [filter, currentPage])\n\n    const onPageChanged = (pageNumber: number) => {\n        dispatch(requestUsers(pageNumber, pageSize, filter))\n    }\n\n    const onFilterChange = (filter: FilterType) => {\n        dispatch(requestUsers(1, pageSize, filter))\n    }\n\n    return (\n        <div>\n            <UsersSearchForm onFilterChange={onFilterChange}/>\n            {/*<Paginator currentPage={currentPage} onPageChanged={onPageChanged}*/}\n            {/*           pageSize={pageSize} totalItemsCount={totalUsersCount}/>*/}\n            <div className={s.users}>\n                {users.map(u => <div key={u.id} className={s.item}>\n                    <span className={s.area}>\n                        <div>\n                            <NavLink to={'/profile/' + u.id}>\n                                {u.photos.small ? <img src={u.photos.small} alt=\"user_photo\" className={s.photo}/>\n                                    : <Avatar size={100} shape='square' icon={<UserOutlined/>}/>}\n                            </NavLink>\n                        </div>\n                        <span className={s.area + '' + s.field}>\n                            <span className={s.area}>\n                                <div>{u.name}</div>\n                                <div>{u.status}</div>\n                            </span>\n                        </span>\n                        <div> {u.followed\n                            ? <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\n                                dispatch(unfollow(u.id))\n                            }}>Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\n                                dispatch(follow(u.id))\n                            }}>Follow</button>\n                        } </div>\n                    </span>\n                </div>)}\n            </div>\n            <Pagination defaultCurrent={1} current={currentPage} total={totalUsersCount}\n                        defaultPageSize={pageSize} onChange={onPageChanged} showSizeChanger={false}/>\n        </div>\n    )\n}\n\nexport default Users;","import {useSelector} from 'react-redux';\nimport React from 'react';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport {\n    getIsFetching,\n} from '../../redux/users-selectors';\n\ntype UsersPagePropsType = {\n    pageTitle: string\n}\nconst UsersPage: React.FC<UsersPagePropsType> = ({ pageTitle }) => {\n    const isFetching = useSelector(getIsFetching)\n    return (\n        <>\n            <h2>{pageTitle}</h2>\n            {isFetching ? <Preloader/> : null}\n            <Users />\n        </>\n    )\n}\n\nexport default UsersPage","import {AppSateType} from './redux-store';\n\nexport const selectIsAuth = (state: AppSateType) => {\n    return state.auth.isAuth;\n}\nexport const selectCurrentUserLogin = (state: AppSateType) => {\n    return state.auth.login;\n}","import React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router\";\nimport s from './../common/FormsControls/FormControl.module.css';\nimport {selectIsAuth} from '../../redux/auth-selectors';\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType>> = ({handleSubmit, error}) => {\n    return <form onSubmit={handleSubmit}>\n        <div>\n            <Field placeholder='E-mail' component={Input} type=\"email\" name='email' validate={[required]}/>\n        </div>\n        <div>\n            <Field placeholder='Password' component={Input} type=\"password\" name='password' validate={[required]}/>\n        </div>\n        <div>\n            <Field type=\"checkbox\" component={Input} name='rememberMe'/> Remember me\n        </div>\n        {error && <div className={s.formSummeryError}>\n            {error}\n        </div>}\n        <div>\n            <button>Login</button>\n        </div>\n    </form>\n};\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType>({ form: 'login' })(LoginForm);\n\ntype LoginFormValuesType = {\n    rememberMe: boolean\n    password: string\n    email: string\n}\n\nconst LoginPage: React.FC = () => {\n    const isAuth = useSelector(selectIsAuth)\n    const dispatch = useDispatch()\n    const onSubmit = (formData: LoginFormValuesType) => {\n        dispatch(login(formData.email, formData.password, formData.rememberMe))\n    };\n\n    if (isAuth) return <Redirect to='/profile'/>\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n};\n\n\nexport default LoginPage","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Button, Typography} from 'antd';\nimport {selectCurrentUserLogin, selectIsAuth} from '../../redux/auth-selectors';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {logout} from '../../redux/auth-reducer';\nimport './Header.css';\nimport {UserAvatar} from '../Avatar/Avatar';\n\nconst HeaderApp: React.FC = () => {\n    const { Text } = Typography;\n\n    const isAuth = useSelector(selectIsAuth)\n    const login = useSelector(selectCurrentUserLogin)\n\n    const dispatch = useDispatch()\n    const logoutCallBack = () => {\n        dispatch(logout())\n    }\n\n    return(\n        <header className='header'>\n            <div className='loginBlock'>\n                {isAuth\n                    ? <>\n                        <Link to={'/profile'} className='avatarBlock'>\n                            <UserAvatar small/>\n                            <Text strong type=\"warning\">{login}</Text>\n                        </Link>\n                        <Button onClick={logoutCallBack}>Logout</Button>\n                    </>\n                    : <Button><Link to={'/login'}>Login</Link></Button>}\n            </div>\n        </header>\n    )\n}\n\nexport default HeaderApp;","import React from \"react\";\n\nexport function withSuspense<WCP> (WrappedComponent: React.ComponentType<WCP>) {\n    return (props: WCP) => (\n        <React.Suspense fallback={<div>loading...</div>}>\n            <WrappedComponent {...props} />\n        </React.Suspense>\n    )\n}","import React, {useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter, Link} from 'react-router-dom';\nimport {Route} from 'react-router-dom';\nimport UsersPage from './components/Users/UsersContainer';\nimport LoginPage from './components/Login/Login';\nimport {connect} from 'react-redux';\nimport {initializeApp} from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport {AppSateType} from './redux/redux-store';\nimport 'antd/dist/reset.css';\n\nimport {Layout, Menu, Breadcrumb} from 'antd';\nimport logo from './assets/images/logo.png';\nimport HeaderApp from './components/Header/Header';\nimport {withSuspense} from './hoc/WithSuspense';\n\nconst {SubMenu} = Menu;\nconst {Header, Content, Footer, Sider} = Layout;\n\nconst mapStateToProps = (state: AppSateType) => ({\n    initialized: state.app.initialized\n})\n\ntype PropsType = ReturnType<typeof mapStateToProps>\n\ntype DispatchPropsType = {\n    initializeApp: () => void\n}\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\nconst ChatPage = React.lazy(() => import('./pages/Chat/ChatPage'))\n\nconst SuspendedDialogs = withSuspense(DialogsContainer)\nconst SuspendedProfile = withSuspense(ProfileContainer)\nconst SuspendedChat = withSuspense(ChatPage)\n\nconst App: React.FC<PropsType & DispatchPropsType> = (props) => {\n    useEffect(() => {\n        props.initializeApp();\n    })\n\n    if (!props.initialized) {\n        return <Preloader/>\n    }\n\n    return (\n        <BrowserRouter>\n            <Layout>\n                <Header className=\"header\">\n                    <div className=\"logo\"><img src={logo} alt='logo'/></div>\n                    <HeaderApp/>\n                </Header>\n                <Content style={{padding: '0 50px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        {/*<Breadcrumb.Item>Home</Breadcrumb.Item>*/}\n                        {/*<Breadcrumb.Item>List</Breadcrumb.Item>*/}\n                        {/*<Breadcrumb.Item>App</Breadcrumb.Item>*/}\n                    </Breadcrumb>\n                    <Layout style={{padding: '24px 0', background: '#fff'}}>\n                        <Sider width={200} style={{background: '#fff'}}>\n                            <Menu\n                                mode=\"inline\"\n                                style={{height: '100%'}}\n                            >\n                                <SubMenu\n                                    key=\"my_profile\"\n                                    title={<span>My Profile</span>}\n                                >\n                                    <Menu.Item key=\"profile\"><Link to='/profile'>Profile</Link></Menu.Item>\n                                    <Menu.Item key=\"dialogs\"><Link to='/dialogs'>Massages</Link></Menu.Item>\n                                </SubMenu>\n                                <Menu.Item key=\"users\"><Link to='/users'>Users</Link></Menu.Item>\n                                <Menu.Item key=\"chat\"><Link to='/chat'>Chat</Link></Menu.Item>\n                            </Menu>\n                        </Sider>\n                        <Content style={{padding: '0 24px', minHeight: 280}}>\n                            <Route\n                                path=\"/profile/:userId?\"\n                                render={() =>\n                                    <SuspendedProfile/>\n                                }\n                            />\n                            <Route\n                                path=\"/dialogs\"\n                                render={() =>\n                                    <SuspendedDialogs/>\n                                }\n                            />\n                            <Route\n                                path=\"/users\"\n                                render={() =>\n                                    <UsersPage pageTitle=\"Users page\"/>\n                                }\n                            />\n                            <Route\n                                path=\"/login\"\n                                render={() =>\n                                    <LoginPage/>\n                                }\n                            />\n                            <Route\n                                path=\"/chat\"\n                                render={() =>\n                                    <SuspendedChat/>\n                                }\n                            />\n                        </Content>\n                    </Layout>\n                </Content>\n                <Footer style={{textAlign: 'center'}}>©2023 Created by Eugenia Popova</Footer>\n            </Layout>\n        </BrowserRouter>\n    );\n}\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App\n        />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Users_photo__2hOPg\",\"area\":\"Users_area__3s_qe\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"pageButton\":\"Users_pageButton__1ZjBo\",\"users\":\"Users_users__2Iv27\"};"],"sourceRoot":""}